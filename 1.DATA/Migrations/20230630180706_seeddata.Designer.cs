// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _1.DATA.DatabaseContext;

#nullable disable

namespace _1.DATA.Migrations
{
    [DbContext(typeof(BeeSneakerShopDbContext))]
    [Migration("20230630180706_seeddata")]
    partial class seeddata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("_1.DATA.Model.ChiTietPhieuNhap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleteByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GiaNhap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IdPhieuNhap")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSPCT")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdPhieuNhap");

                    b.HasIndex("IdSPCT");

                    b.HasIndex("IdSize");

                    b.ToTable("ChiTietPhieuNhap", (string)null);
                });

            modelBuilder.Entity("_1.DATA.Model.GioHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleteByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdKH")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdKH");

                    b.ToTable("GioHang", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9779e43b-fcfc-40a0-b778-fa6f4757fd55"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8305),
                            IdKH = new Guid("3f8c0eff-a06a-4b07-a449-8832c622290d"),
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("87c18de0-9653-408e-9f7d-36b2f5a3d890"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8307),
                            IdKH = new Guid("f572907f-4e58-4ee3-b282-8100a3a2043f"),
                            isDelete = false
                        });
                });

            modelBuilder.Entity("_1.DATA.Model.GioHangChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleteByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdGioHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSPChitiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdGioHang");

                    b.HasIndex("IdSPChitiet");

                    b.HasIndex("IdSize");

                    b.ToTable("GiohangChitiet", (string)null);
                });

            modelBuilder.Entity("_1.DATA.Model.Hang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleteByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Hang", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b9db8c0c-bf87-4e16-bdd2-a9fee4b14b4a"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8272),
                            TenHang = "Adidas",
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("da7a593f-20e5-407e-85c6-4bb0a97f1a73"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8274),
                            TenHang = "Nike",
                            isDelete = false
                        });
                });

            modelBuilder.Entity("_1.DATA.Model.HinhAnh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleteByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdSPCT")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LinkAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UpdateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdSPCT");

                    b.ToTable("HinhAnh", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e508ba75-5185-4ef4-b533-2099fff74a84"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8234),
                            IdSPCT = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            LinkAnh = "C:\\Users\\Admin\\OneDrive\\Documents\\Desktop\\Project\\DATN_UD08\\4.CusView\\wwwroot\\img\\PRODUCT\\5.png",
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("b596d1db-4113-4ed7-99e2-fa96a945d23c"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8237),
                            IdSPCT = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            LinkAnh = "C:\\Users\\Admin\\OneDrive\\Documents\\Desktop\\Project\\DATN_UD08\\4.CusView\\wwwroot\\img\\PRODUCT\\6.jpg",
                            isDelete = false
                        });
                });

            modelBuilder.Entity("_1.DATA.Model.HoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleteByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdKH")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdMaGiamGia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdNV")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdKH");

                    b.HasIndex("IdMaGiamGia");

                    b.HasIndex("IdNV");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("_1.DATA.Model.HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleteByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IdHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSPChitiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdHoaDon");

                    b.HasIndex("IdSPChitiet");

                    b.HasIndex("IdSize");

                    b.ToTable("HoadonChitiet", (string)null);
                });

            modelBuilder.Entity("_1.DATA.Model.KhachHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleteByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sdt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("KhachHang", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f8c0eff-a06a-4b07-a449-8832c622290d"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8325),
                            DiaChi = "1",
                            Email = "khachhang@gmail.com",
                            GioiTinh = true,
                            MatKhau = "123456",
                            NgaySinh = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8323),
                            Sdt = "1",
                            Ten = "a",
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("f572907f-4e58-4ee3-b282-8100a3a2043f"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8329),
                            DiaChi = "2",
                            Email = "khachhang01@gmail.com",
                            GioiTinh = true,
                            MatKhau = "123456",
                            NgaySinh = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8328),
                            Sdt = "2",
                            Ten = "b",
                            isDelete = false
                        });
                });

            modelBuilder.Entity("_1.DATA.Model.MaGiamGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleteByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatdau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetthuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhanTramGiam")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MaGiamGia", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c76e6a71-f991-4cab-ba0a-9d899f56a4c0"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8345),
                            Ma = "30",
                            NgayBatdau = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8340),
                            NgayKetthuc = new DateTime(2023, 7, 31, 0, 0, 0, 0, DateTimeKind.Local),
                            PhanTramGiam = 30,
                            SoLuong = 5,
                            TrangThai = 0,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("26a26949-1dfc-42cb-a54f-dbdb44d81685"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8349),
                            Ma = "20",
                            NgayBatdau = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8347),
                            NgayKetthuc = new DateTime(2023, 7, 31, 0, 0, 0, 0, DateTimeKind.Local),
                            PhanTramGiam = 20,
                            SoLuong = 7,
                            TrangThai = 0,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("71a005c0-0f56-4068-83e3-9c4cc3196b9b"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8351),
                            Ma = "10",
                            NgayBatdau = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8350),
                            NgayKetthuc = new DateTime(2023, 7, 31, 0, 0, 0, 0, DateTimeKind.Local),
                            PhanTramGiam = 10,
                            SoLuong = 13,
                            TrangThai = 0,
                            isDelete = false
                        });
                });

            modelBuilder.Entity("_1.DATA.Model.MauSac", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleteByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenMau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MauSac", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a6c0c50-fb67-44ea-9c62-ad0e0f67ab3c"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8286),
                            TenMau = "Xanh",
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("5e5f7d51-044f-4928-9aac-4a496c629231"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8288),
                            TenMau = "Đỏ",
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("cfa013b0-34dc-44d5-a471-7c49a9ac167d"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8290),
                            TenMau = "Đen",
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("8d364a55-877f-45a5-9408-66afb8ab873f"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8291),
                            TenMau = "Trắng",
                            isDelete = false
                        });
                });

            modelBuilder.Entity("_1.DATA.Model.NhaCungCap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleteByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sdt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("NhaCungCap", (string)null);
                });

            modelBuilder.Entity("_1.DATA.Model.PhieuNhap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleteByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdNhaCungCap")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaPhieuNhap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CreateByUserId");

                    b.HasIndex("IdNhaCungCap");

                    b.ToTable("PhieuNhap", (string)null);
                });

            modelBuilder.Entity("_1.DATA.Model.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("_1.DATA.Model.SanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleteByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdHang");

                    b.ToTable("SanPham", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("01bf8a6c-d89a-4db2-9068-af277be488ae"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8251),
                            IdHang = new Guid("b9db8c0c-bf87-4e16-bdd2-a9fee4b14b4a"),
                            Ten = "Giay 1",
                            TrangThai = 1,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("9a1b3786-d0d0-402a-bfd8-10db04f8e6ed"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8254),
                            IdHang = new Guid("da7a593f-20e5-407e-85c6-4bb0a97f1a73"),
                            Ten = "Giay 2",
                            TrangThai = 1,
                            isDelete = false
                        });
                });

            modelBuilder.Entity("_1.DATA.Model.SanPhamChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleteByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IdMauSac")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaSPChiTiet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSPChiTiet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdMauSac");

                    b.HasIndex("IdSP");

                    b.ToTable("SanphamChitiet", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(7985),
                            GiaBan = 100000m,
                            IdMauSac = new Guid("7a6c0c50-fb67-44ea-9c62-ad0e0f67ab3c"),
                            IdSP = new Guid("01bf8a6c-d89a-4db2-9068-af277be488ae"),
                            MaSPChiTiet = "SP1",
                            TenSPChiTiet = "V1",
                            TrangThai = 1,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(7995),
                            GiaBan = 200000m,
                            IdMauSac = new Guid("5e5f7d51-044f-4928-9aac-4a496c629231"),
                            IdSP = new Guid("9a1b3786-d0d0-402a-bfd8-10db04f8e6ed"),
                            MaSPChiTiet = "SP2",
                            TenSPChiTiet = "V2",
                            TrangThai = 1,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("ec94662b-535d-4599-b462-9951c727be51"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(7998),
                            GiaBan = 100000m,
                            IdMauSac = new Guid("8d364a55-877f-45a5-9408-66afb8ab873f"),
                            IdSP = new Guid("01bf8a6c-d89a-4db2-9068-af277be488ae"),
                            MaSPChiTiet = "SP1",
                            TenSPChiTiet = "V1",
                            TrangThai = 1,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("bcb53bdb-2f7e-4026-a5a3-09ff834562ad"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8002),
                            GiaBan = 200000m,
                            IdMauSac = new Guid("cfa013b0-34dc-44d5-a471-7c49a9ac167d"),
                            IdSP = new Guid("9a1b3786-d0d0-402a-bfd8-10db04f8e6ed"),
                            MaSPChiTiet = "SP2",
                            TenSPChiTiet = "V2",
                            TrangThai = 1,
                            isDelete = false
                        });
                });

            modelBuilder.Entity("_1.DATA.Model.Size", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleteByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("KichCo")
                        .HasColumnType("real");

                    b.Property<Guid?>("UpdateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Size", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cd27319d-468d-4189-99a4-b2da273492a3"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8097),
                            KichCo = 36f,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("d43ed236-c9cf-4659-ba0d-f834bb316d39"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8100),
                            KichCo = 37f,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("d6dc21e2-f1be-48ec-8f30-bd6bbc73daec"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8102),
                            KichCo = 38f,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("9297a9b2-5c69-4b52-af99-57bbf137dcf1"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8104),
                            KichCo = 39f,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("3a218de7-0c55-4b70-a0d8-823195532b66"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8106),
                            KichCo = 40f,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("2d53402b-696d-4e6e-b95e-fb5f2a99c014"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8107),
                            KichCo = 41f,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("560cd8d3-52cc-4204-9145-0a142cdac1fd"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8109),
                            KichCo = 42f,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("9b9a3a86-196e-4fb2-9300-a64784962d59"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8111),
                            KichCo = 43f,
                            isDelete = false
                        });
                });

            modelBuilder.Entity("_1.DATA.Model.SizeSanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleteByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdSanPhamChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdSanPhamChiTiet");

                    b.HasIndex("IdSize");

                    b.ToTable("SizeSanPham", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ee0fa3d-9ab6-490a-83ca-01021103412d"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8127),
                            IdSanPhamChiTiet = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            IdSize = new Guid("cd27319d-468d-4189-99a4-b2da273492a3"),
                            SoLuong = 10,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("7378b6ec-8274-4186-8855-0cafc1ce5881"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8134),
                            IdSanPhamChiTiet = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            IdSize = new Guid("d43ed236-c9cf-4659-ba0d-f834bb316d39"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("d09fd8b7-8263-4014-91d8-63ea9470a8de"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8137),
                            IdSanPhamChiTiet = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            IdSize = new Guid("d6dc21e2-f1be-48ec-8f30-bd6bbc73daec"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("5885a945-5722-4177-8fa7-d26b0dacf980"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8140),
                            IdSanPhamChiTiet = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            IdSize = new Guid("9297a9b2-5c69-4b52-af99-57bbf137dcf1"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("0515437f-c4ab-4956-8b65-4f7d183b1620"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8142),
                            IdSanPhamChiTiet = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            IdSize = new Guid("3a218de7-0c55-4b70-a0d8-823195532b66"),
                            SoLuong = 10,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("bec142a2-48ab-4785-8295-63a08d7dbf99"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8145),
                            IdSanPhamChiTiet = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            IdSize = new Guid("2d53402b-696d-4e6e-b95e-fb5f2a99c014"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("a18febe6-0a68-44cb-8ca0-1514f5bb6d48"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8147),
                            IdSanPhamChiTiet = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            IdSize = new Guid("560cd8d3-52cc-4204-9145-0a142cdac1fd"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("6b5d160a-2812-4c8c-a63d-0a4535990221"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8150),
                            IdSanPhamChiTiet = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            IdSize = new Guid("9b9a3a86-196e-4fb2-9300-a64784962d59"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("a8b2d347-1af2-4027-8c6c-f368e567675f"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8152),
                            IdSanPhamChiTiet = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            IdSize = new Guid("cd27319d-468d-4189-99a4-b2da273492a3"),
                            SoLuong = 10,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("289ce400-38f1-47fc-a5fc-dbf88bf2582e"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8155),
                            IdSanPhamChiTiet = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            IdSize = new Guid("d43ed236-c9cf-4659-ba0d-f834bb316d39"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("a16d0a3a-97e9-4b41-8c6a-54e35cdeaca3"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8158),
                            IdSanPhamChiTiet = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            IdSize = new Guid("d6dc21e2-f1be-48ec-8f30-bd6bbc73daec"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("06dd39cf-f6c7-4605-9d4a-b4f764c29c73"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8162),
                            IdSanPhamChiTiet = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            IdSize = new Guid("9297a9b2-5c69-4b52-af99-57bbf137dcf1"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("b172bc46-4292-4013-b327-6b2e3def9513"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8164),
                            IdSanPhamChiTiet = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            IdSize = new Guid("3a218de7-0c55-4b70-a0d8-823195532b66"),
                            SoLuong = 10,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("75c5f866-2e78-49bb-80bb-fcd9c7d662c8"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8166),
                            IdSanPhamChiTiet = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            IdSize = new Guid("2d53402b-696d-4e6e-b95e-fb5f2a99c014"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("fbad9b0b-0e5a-43a0-8fc9-6aebc586420c"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8169),
                            IdSanPhamChiTiet = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            IdSize = new Guid("560cd8d3-52cc-4204-9145-0a142cdac1fd"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("fe243159-e3d5-4e38-b4d5-875b908b1d73"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8172),
                            IdSanPhamChiTiet = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            IdSize = new Guid("9b9a3a86-196e-4fb2-9300-a64784962d59"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("101c81ee-1ca5-4570-be45-c453527fa9aa"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8174),
                            IdSanPhamChiTiet = new Guid("ec94662b-535d-4599-b462-9951c727be51"),
                            IdSize = new Guid("cd27319d-468d-4189-99a4-b2da273492a3"),
                            SoLuong = 10,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("507812da-fb24-4429-b50f-c1f5c28d2cc5"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8176),
                            IdSanPhamChiTiet = new Guid("ec94662b-535d-4599-b462-9951c727be51"),
                            IdSize = new Guid("d43ed236-c9cf-4659-ba0d-f834bb316d39"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("69d226ff-ad05-477f-8aaf-d4e9c8785233"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8179),
                            IdSanPhamChiTiet = new Guid("ec94662b-535d-4599-b462-9951c727be51"),
                            IdSize = new Guid("d6dc21e2-f1be-48ec-8f30-bd6bbc73daec"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("c5890b6f-463f-4ab3-9dba-cab55b32e929"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8182),
                            IdSanPhamChiTiet = new Guid("ec94662b-535d-4599-b462-9951c727be51"),
                            IdSize = new Guid("9297a9b2-5c69-4b52-af99-57bbf137dcf1"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("ec43012e-0ca2-4379-bccf-abd59824b300"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8184),
                            IdSanPhamChiTiet = new Guid("ec94662b-535d-4599-b462-9951c727be51"),
                            IdSize = new Guid("3a218de7-0c55-4b70-a0d8-823195532b66"),
                            SoLuong = 10,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("daa1d08d-ec42-4db9-9c91-1ec72a7a7a09"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8186),
                            IdSanPhamChiTiet = new Guid("ec94662b-535d-4599-b462-9951c727be51"),
                            IdSize = new Guid("2d53402b-696d-4e6e-b95e-fb5f2a99c014"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("1030ea99-2996-4537-b301-3ff511199b66"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8189),
                            IdSanPhamChiTiet = new Guid("ec94662b-535d-4599-b462-9951c727be51"),
                            IdSize = new Guid("560cd8d3-52cc-4204-9145-0a142cdac1fd"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("df277b8d-c5d0-4f62-9df1-9b60a896f634"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8191),
                            IdSanPhamChiTiet = new Guid("ec94662b-535d-4599-b462-9951c727be51"),
                            IdSize = new Guid("9b9a3a86-196e-4fb2-9300-a64784962d59"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("4d38cd83-32ca-415b-8fbe-88b9a23489c5"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8194),
                            IdSanPhamChiTiet = new Guid("bcb53bdb-2f7e-4026-a5a3-09ff834562ad"),
                            IdSize = new Guid("cd27319d-468d-4189-99a4-b2da273492a3"),
                            SoLuong = 10,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("efc5ffac-f3c6-4c13-a205-51cb97e7a99a"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8196),
                            IdSanPhamChiTiet = new Guid("bcb53bdb-2f7e-4026-a5a3-09ff834562ad"),
                            IdSize = new Guid("d43ed236-c9cf-4659-ba0d-f834bb316d39"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("f10629ff-6d82-462d-9f28-a22ac96ff880"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8199),
                            IdSanPhamChiTiet = new Guid("bcb53bdb-2f7e-4026-a5a3-09ff834562ad"),
                            IdSize = new Guid("d6dc21e2-f1be-48ec-8f30-bd6bbc73daec"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("801a3395-42b9-4874-8144-7d98bd15122e"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8201),
                            IdSanPhamChiTiet = new Guid("bcb53bdb-2f7e-4026-a5a3-09ff834562ad"),
                            IdSize = new Guid("9297a9b2-5c69-4b52-af99-57bbf137dcf1"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("57987315-cc58-4f70-918f-23858dcea978"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8203),
                            IdSanPhamChiTiet = new Guid("bcb53bdb-2f7e-4026-a5a3-09ff834562ad"),
                            IdSize = new Guid("3a218de7-0c55-4b70-a0d8-823195532b66"),
                            SoLuong = 10,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("e0e5863b-7ae4-47d5-9a96-4c0f732af3f0"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8206),
                            IdSanPhamChiTiet = new Guid("bcb53bdb-2f7e-4026-a5a3-09ff834562ad"),
                            IdSize = new Guid("2d53402b-696d-4e6e-b95e-fb5f2a99c014"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("e1cff87b-abd8-4bf0-a7ce-199bd2716fc0"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8209),
                            IdSanPhamChiTiet = new Guid("bcb53bdb-2f7e-4026-a5a3-09ff834562ad"),
                            IdSize = new Guid("560cd8d3-52cc-4204-9145-0a142cdac1fd"),
                            SoLuong = 5,
                            isDelete = false
                        },
                        new
                        {
                            Id = new Guid("69e6c908-ea91-4c4a-86f2-c5cb26ff9ee4"),
                            CreateByUserId = new Guid("8bbbf62b-f477-4009-b5d5-1ec7f550f00a"),
                            CreateDate = new DateTime(2023, 7, 1, 1, 7, 5, 908, DateTimeKind.Local).AddTicks(8211),
                            IdSanPhamChiTiet = new Guid("bcb53bdb-2f7e-4026-a5a3-09ff834562ad"),
                            IdSize = new Guid("9b9a3a86-196e-4fb2-9300-a64784962d59"),
                            SoLuong = 5,
                            isDelete = false
                        });
                });

            modelBuilder.Entity("_1.DATA.Model.TheLoai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleteByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenTheLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TheLoai", (string)null);
                });

            modelBuilder.Entity("_1.DATA.Model.TheLoaiSanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleteByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdChiTietSP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTheLoai")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdChiTietSP");

                    b.HasIndex("IdTheLoai");

                    b.ToTable("TheLoaiSanPham", (string)null);
                });

            modelBuilder.Entity("_1.DATA.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AnhNhanVien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<Guid?>("IdGuiBaoCao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MaNV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("_1.DATA.Model.ChiTietPhieuNhap", b =>
                {
                    b.HasOne("_1.DATA.Model.PhieuNhap", "phieuNhap")
                        .WithMany("chiTietPhieuNhaps")
                        .HasForeignKey("IdPhieuNhap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_1.DATA.Model.SanPhamChiTiet", "sanPhamChiTiet")
                        .WithMany("ChiTietPhieuNhaps")
                        .HasForeignKey("IdSPCT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_1.DATA.Model.Size", "size")
                        .WithMany("ChiTietPhieuNhaps")
                        .HasForeignKey("IdSize")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("phieuNhap");

                    b.Navigation("sanPhamChiTiet");

                    b.Navigation("size");
                });

            modelBuilder.Entity("_1.DATA.Model.GioHang", b =>
                {
                    b.HasOne("_1.DATA.Model.KhachHang", "KhachHang")
                        .WithMany("GioHangs")
                        .HasForeignKey("IdKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("_1.DATA.Model.GioHangChiTiet", b =>
                {
                    b.HasOne("_1.DATA.Model.GioHang", "gioHang")
                        .WithMany("giohangChitiets")
                        .HasForeignKey("IdGioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_1.DATA.Model.SanPhamChiTiet", "sanphamChitiet")
                        .WithMany("giohangChitiets")
                        .HasForeignKey("IdSPChitiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_1.DATA.Model.Size", "size")
                        .WithMany("giohangChitiets")
                        .HasForeignKey("IdSize")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("gioHang");

                    b.Navigation("sanphamChitiet");

                    b.Navigation("size");
                });

            modelBuilder.Entity("_1.DATA.Model.HinhAnh", b =>
                {
                    b.HasOne("_1.DATA.Model.SanPhamChiTiet", "sanPhamChiTiet")
                        .WithMany("hinhAnhs")
                        .HasForeignKey("IdSPCT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sanPhamChiTiet");
                });

            modelBuilder.Entity("_1.DATA.Model.HoaDon", b =>
                {
                    b.HasOne("_1.DATA.Model.KhachHang", "khachHang")
                        .WithMany("hoaDons")
                        .HasForeignKey("IdKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_1.DATA.Model.MaGiamGia", "maGiamGia")
                        .WithMany("hoaDons")
                        .HasForeignKey("IdMaGiamGia");

                    b.HasOne("_1.DATA.Model.User", "nhanVien")
                        .WithMany("hoaDons")
                        .HasForeignKey("IdNV");

                    b.Navigation("khachHang");

                    b.Navigation("maGiamGia");

                    b.Navigation("nhanVien");
                });

            modelBuilder.Entity("_1.DATA.Model.HoaDonChiTiet", b =>
                {
                    b.HasOne("_1.DATA.Model.HoaDon", "hoaDon")
                        .WithMany("hoadonChitiets")
                        .HasForeignKey("IdHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_1.DATA.Model.SanPhamChiTiet", "sanphamChitiet")
                        .WithMany("hoadonChitiets")
                        .HasForeignKey("IdSPChitiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_1.DATA.Model.Size", "size")
                        .WithMany("hoadonChitiets")
                        .HasForeignKey("IdSize")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hoaDon");

                    b.Navigation("sanphamChitiet");

                    b.Navigation("size");
                });

            modelBuilder.Entity("_1.DATA.Model.PhieuNhap", b =>
                {
                    b.HasOne("_1.DATA.Model.User", "nhanVien")
                        .WithMany("PhieuNhaps")
                        .HasForeignKey("CreateByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_1.DATA.Model.NhaCungCap", "nhaCungCap")
                        .WithMany("phieuNhaps")
                        .HasForeignKey("IdNhaCungCap");

                    b.Navigation("nhaCungCap");

                    b.Navigation("nhanVien");
                });

            modelBuilder.Entity("_1.DATA.Model.SanPham", b =>
                {
                    b.HasOne("_1.DATA.Model.Hang", "hang")
                        .WithMany("sanPhams")
                        .HasForeignKey("IdHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hang");
                });

            modelBuilder.Entity("_1.DATA.Model.SanPhamChiTiet", b =>
                {
                    b.HasOne("_1.DATA.Model.MauSac", "mauSac")
                        .WithMany("sanphamChitiets")
                        .HasForeignKey("IdMauSac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_1.DATA.Model.SanPham", "sanPham")
                        .WithMany("sanphamChitiets")
                        .HasForeignKey("IdSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mauSac");

                    b.Navigation("sanPham");
                });

            modelBuilder.Entity("_1.DATA.Model.SizeSanPham", b =>
                {
                    b.HasOne("_1.DATA.Model.SanPhamChiTiet", "SanPhamChitiet")
                        .WithMany("SizeSanPhams")
                        .HasForeignKey("IdSanPhamChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_1.DATA.Model.Size", "Size")
                        .WithMany("SizeSanPhams")
                        .HasForeignKey("IdSize")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPhamChitiet");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("_1.DATA.Model.TheLoaiSanPham", b =>
                {
                    b.HasOne("_1.DATA.Model.SanPhamChiTiet", "sanphamChitiet")
                        .WithMany("theLoaiSanPhams")
                        .HasForeignKey("IdChiTietSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_1.DATA.Model.TheLoai", "theLoai")
                        .WithMany("theloaiSanPhams")
                        .HasForeignKey("IdTheLoai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sanphamChitiet");

                    b.Navigation("theLoai");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("_1.DATA.Model.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("_1.DATA.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("_1.DATA.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("_1.DATA.Model.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_1.DATA.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("_1.DATA.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_1.DATA.Model.GioHang", b =>
                {
                    b.Navigation("giohangChitiets");
                });

            modelBuilder.Entity("_1.DATA.Model.Hang", b =>
                {
                    b.Navigation("sanPhams");
                });

            modelBuilder.Entity("_1.DATA.Model.HoaDon", b =>
                {
                    b.Navigation("hoadonChitiets");
                });

            modelBuilder.Entity("_1.DATA.Model.KhachHang", b =>
                {
                    b.Navigation("GioHangs");

                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("_1.DATA.Model.MaGiamGia", b =>
                {
                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("_1.DATA.Model.MauSac", b =>
                {
                    b.Navigation("sanphamChitiets");
                });

            modelBuilder.Entity("_1.DATA.Model.NhaCungCap", b =>
                {
                    b.Navigation("phieuNhaps");
                });

            modelBuilder.Entity("_1.DATA.Model.PhieuNhap", b =>
                {
                    b.Navigation("chiTietPhieuNhaps");
                });

            modelBuilder.Entity("_1.DATA.Model.SanPham", b =>
                {
                    b.Navigation("sanphamChitiets");
                });

            modelBuilder.Entity("_1.DATA.Model.SanPhamChiTiet", b =>
                {
                    b.Navigation("ChiTietPhieuNhaps");

                    b.Navigation("SizeSanPhams");

                    b.Navigation("giohangChitiets");

                    b.Navigation("hinhAnhs");

                    b.Navigation("hoadonChitiets");

                    b.Navigation("theLoaiSanPhams");
                });

            modelBuilder.Entity("_1.DATA.Model.Size", b =>
                {
                    b.Navigation("ChiTietPhieuNhaps");

                    b.Navigation("SizeSanPhams");

                    b.Navigation("giohangChitiets");

                    b.Navigation("hoadonChitiets");
                });

            modelBuilder.Entity("_1.DATA.Model.TheLoai", b =>
                {
                    b.Navigation("theloaiSanPhams");
                });

            modelBuilder.Entity("_1.DATA.Model.User", b =>
                {
                    b.Navigation("PhieuNhaps");

                    b.Navigation("hoaDons");
                });
#pragma warning restore 612, 618
        }
    }
}
